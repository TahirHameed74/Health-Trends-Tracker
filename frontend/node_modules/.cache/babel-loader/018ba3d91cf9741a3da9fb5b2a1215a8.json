{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Work/TemplateJob/scrapper/frontend/src/views/TableList.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport history from '../utils/history';\nimport * as url from '../utils/constant';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport '../assets/css/custom.scss';\nlet columns = [{\n  \"value\": \"Name\"\n}, {\n  \"value\": \"Address\"\n}, {\n  \"value\": \"Height\"\n}, {\n  \"value\": \"Weight\"\n}, {\n  \"value\": \"Age\"\n}, {\n  \"value\": \"DOB\"\n}, {\n  \"value\": \"SSN\"\n}, {\n  \"value\": \"Gender\"\n}];\n\nclass TableList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeader: columns,\n      file: [],\n      patientDetail: []\n    };\n\n    this.fileSelectedCarImg = event => {\n      debugger;\n      const file = event.target.files;\n      this.setState({\n        file: file\n      }, () => {\n        this.uploadFiles();\n      });\n    };\n\n    this.uploadFiles = () => {\n      var formData = new FormData();\n      let files = this.state.file;\n\n      for (const file of files) {\n        formData.append('pdf_files', file);\n      } // for (let i = 0; i < files.length; i++) {\n      //   formData.append(`pdf_files[${i}]`, files[i])\n      // }\n      // formData.append(\"pdf_files\", this.state.file);\n      // const config = {\n      //     enctype=\"multipart/form-data\"\n      //     headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n      // };\n\n\n      let that = this;\n      axios.post(url.scrapeDataUrl, formData, {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        let data = this.state.patientDetail;\n        data = [...data, ...response.data.data];\n        this.setState({\n          patientDetail: data\n        });\n      }).catch(error => {}).finally(() => {// always executed\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getPatientDetail();\n  }\n\n  getPatientDetail() {\n    axios.get(url.getPatientDetailUrl).then(response => {\n      debugger;\n      this.setState({\n        patientDetail: response.data\n      });\n    }).catch(error => {}).finally(() => {// always executed\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table-list\",\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"header-upload-btn\",\n      type: \"file\",\n      onChange: this.fileSelectedCarImg.bind(this),\n      ref: fileInput3 => this.fileInput3 = fileInput3,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      title: \"Patient Detail\",\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      }, this.state.tableHeader.map((prop, key) => {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 34\n          }\n        }, prop.value);\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, this.state.patientDetail.length > 0 && this.state.patientDetail.map((prop, key) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 27\n          }\n        }, prop.map((prop, key) => {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 38\n            }\n          }, prop);\n        }));\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default TableList;","map":{"version":3,"sources":["/Users/mac/Desktop/Work/TemplateJob/scrapper/frontend/src/views/TableList.jsx"],"names":["React","Component","Grid","Row","Col","Table","history","url","axios","Card","thArray","tdArray","columns","TableList","state","tableHeader","file","patientDetail","fileSelectedCarImg","event","target","files","setState","uploadFiles","formData","FormData","append","that","post","scrapeDataUrl","headers","then","response","data","catch","error","finally","componentDidMount","getPatientDetail","get","getPatientDetailUrl","render","bind","fileInput3","map","prop","key","value","length"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport history from '../utils/history';\nimport * as url from '../utils/constant';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport '../assets/css/custom.scss';\n\nlet columns = [\n  {\"value\":\"Name\"},\n  {\"value\":\"Address\"},\n  {\"value\":\"Height\"},\n  {\"value\":\"Weight\"},\n  {\"value\":\"Age\"},\n  {\"value\":\"DOB\"},\n  {\"value\":\"SSN\"},\n  {\"value\":\"Gender\"},\n]\n\nclass TableList extends Component {\n \n  state = {\n    tableHeader:columns,\n    file:[],\n    patientDetail:[],\n  }\n\n  componentDidMount(){\n    this.getPatientDetail();\n  }\n\n  getPatientDetail(){\n    axios.get(url.getPatientDetailUrl,\n         \n      )\n      .then((response) => {\n        debugger;\n        this.setState({\n          patientDetail:response.data,\n        });\n      })\n      .catch((error) => {\n        \n      })\n      .finally(() => {\n          // always executed\n      });\n  }\n\n  fileSelectedCarImg = event =>{\n    debugger;\n    const file =(event.target.files);\n\n    this.setState({ \n      file:file\n    },()=>{\n      this.uploadFiles();\n    });\n  }\n\n  uploadFiles = () => {\n      var formData = new FormData();\n      let files= this.state.file;\n      \n      for (const file of files) {\n        formData.append('pdf_files', file);\n      }\n\n      // for (let i = 0; i < files.length; i++) {\n      //   formData.append(`pdf_files[${i}]`, files[i])\n      // }\n      // formData.append(\"pdf_files\", this.state.file);\n  \n      // const config = {\n      //     enctype=\"multipart/form-data\"\n      //     headers: { Authorization: `Token ${localStorage.getItem('userToken')}`}\n      // };\n      \n      let that = this;\n      axios.post(url.scrapeDataUrl,\n          formData,\n          {\n            headers: {\n                \"Content-type\": \"multipart/form-data\",\n            },                    \n        }\n      )\n      .then((response) => {\n          let data = this.state.patientDetail;\n          data = [...data,...response.data.data]\n          this.setState({\n            patientDetail:data\n          });\n      })\n      .catch((error) => {\n        \n      })\n      .finally(() => {\n          // always executed\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"table-list\" className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={12}>\n            <input className=\"header-upload-btn\" type=\"file\" onChange={this.fileSelectedCarImg.bind(this)} ref={fileInput3 => this.fileInput3 = fileInput3 }  multiple />\n            {/* <button onClick={this.fileUploadCarImg} c>Upload</button> */}\n              <Card\n                title=\"Patient Detail\"\n                category=\"\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <Table striped hover>\n                    <thead>\n                      <tr>\n                        {this.state.tableHeader.map((prop, key) => {\n                          return <th key={key}>{prop.value}</th>;\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.patientDetail.length > 0 && this.state.patientDetail.map((prop, key) => {\n                       return (\n                          <tr key={key}>\n                            {prop.map((prop, key) => {\n                              return <td key={key}>{prop}</td>;\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col>\n\n       \n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default TableList;\n"]},"metadata":{},"sourceType":"module"}