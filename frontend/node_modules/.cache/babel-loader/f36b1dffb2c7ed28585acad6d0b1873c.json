{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Work/TemplateJob/scrapper/frontend/src/views/Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport axios from 'axios';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport history from '../utils/history';\nimport * as url from '../utils/constant';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport Select from 'react-select';\nimport '../assets/css/custom.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './dashboard.scss';\nimport { dataPie, legendPie, dataSales, optionsSales, responsiveSales, legendSales, dataBar, optionsBar, responsiveBar, legendBar } from \"variables/Variables.jsx\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.legendPie = {\n      names: [\"L0650\", \"L3960\", \"L3809\", \"L1851\", \"L2397\", \"L1833\", \"L1906\", \"L3916\", \"L1971\"],\n      types: [\"L0650\", \"L3960\", \"L3809\", \"L1851\", \"L2397\", \"L1833\", \"L1906\", \"L3916\", \"L1971\"]\n    };\n    this.state = {\n      codePercentageData: [],\n      providerGraphData: {},\n      physcianGraphData: {},\n      DMETP_TBGraphData: {},\n      DMETPGraphData: {},\n      doctors: [],\n      doctorDetail: {}\n    };\n    this.optionsSalesPhysician = {\n      low: 0,\n      high: 800,\n      showArea: false,\n      height: \"245px\",\n      axisX: {\n        showGrid: false\n      },\n      lineSmooth: true,\n      showLine: true,\n      showPoint: true,\n      fullWidth: true,\n      chartPadding: {\n        right: 50\n      }\n    };\n    this.optionsSalesDMETP_TB = {\n      low: 0,\n      high: 800,\n      showArea: false,\n      height: \"245px\",\n      axisX: {\n        showGrid: false\n      },\n      lineSmooth: true,\n      showLine: true,\n      showPoint: true,\n      fullWidth: true,\n      chartPadding: {\n        right: 50\n      }\n    };\n    this.optionsSalesProvider = {\n      low: 0,\n      high: 800,\n      showArea: false,\n      height: \"245px\",\n      axisX: {\n        showGrid: false\n      },\n      lineSmooth: true,\n      showLine: true,\n      showPoint: true,\n      fullWidth: true,\n      chartPadding: {\n        right: 50\n      }\n    };\n    this.optionsSalesDMETP = {\n      low: 0,\n      high: 800,\n      showArea: false,\n      height: \"245px\",\n      axisX: {\n        showGrid: false\n      },\n      lineSmooth: true,\n      showLine: true,\n      showPoint: true,\n      fullWidth: true,\n      chartPadding: {\n        right: 50\n      }\n    };\n\n    this.getDoctorDetail = event => {\n      axios.get(url.getDoctorDetailUrl, {\n        params: {\n          id: event.value\n        }\n      }).then(response => {\n        debugger;\n        this.setState({\n          doctorDetail: response.data\n        });\n      }).catch(error => {}).finally(() => {});\n    };\n  }\n\n  componentDidMount() {\n    this.getGraphData();\n  }\n\n  createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push( /*#__PURE__*/React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  }\n\n  getGraphData() {\n    axios.get(url.getGraphDataUrl).then(response => {\n      let labels = [];\n      let series = [];\n      response.data.cp.map((obj, i) => {\n        labels[i] = obj.code;\n        series[i] = obj.percentage;\n      });\n      let dataPie = {\n        labels: labels,\n        series: series\n      };\n      labels = [];\n      series = [];\n      let physicianValue = 0;\n      response.data.PhysicianGraph.map((obj, i) => {\n        labels[i] = obj.code;\n        series[i] = obj.percentage;\n        physicianValue += Number(obj.percentage);\n      });\n      this.optionsSalesPhysician['high'] = physicianValue;\n      let dataPhysician;\n\n      if (response.data.PhysicianGraph.length > 0) {\n        dataPhysician = {\n          series: [series],\n          labels: labels\n        };\n      } else {\n        dataPhysician = {\n          series: [['']],\n          labels: ['']\n        };\n      }\n\n      labels = [];\n      series = [];\n      let providerValue = 0;\n      response.data.ProviderGraph.map((obj, i) => {\n        labels[i] = obj.code;\n        series[i] = obj.percentage;\n        providerValue += Number(obj.percentage);\n      });\n      this.optionsSalesProvider['high'] = providerValue;\n      let dataProvider;\n\n      if (response.data.ProviderGraph.length > 0) {\n        dataProvider = {\n          series: [series],\n          labels: labels\n        };\n      } else {\n        dataProvider = {\n          series: [['']],\n          labels: ['']\n        };\n      }\n\n      labels = [];\n      series = [];\n      let DMETPValue = 0;\n      response.data.DMETP.map((obj, i) => {\n        labels[i] = obj.code;\n        series[i] = obj.percentage;\n        DMETPValue += Number(obj.percentage);\n      });\n      this.optionsSalesDMETP['high'] = DMETPValue;\n      let dataDMETP;\n\n      if (response.data.DMETP.length > 0) {\n        dataDMETP = {\n          series: [series],\n          labels: labels\n        };\n      } else {\n        dataDMETP = {\n          series: [['']],\n          labels: ['']\n        };\n      }\n\n      labels = [];\n      series = [];\n      let DMETP_TBValue = 0;\n      response.data.DMETP_TB.map((obj, i) => {\n        labels[i] = obj.code;\n        series[i] = obj.percentage;\n        DMETP_TBValue += Number(obj.percentage);\n      });\n      this.optionsSalesDMETP_TB['high'] = DMETP_TBValue;\n      let dataDMETP_TB;\n\n      if (response.data.DMETP_TB.length > 0) {\n        dataDMETP_TB = {\n          series: [series],\n          labels: labels\n        };\n      } else {\n        dataDMETP_TB = {\n          series: [['']],\n          labels: ['']\n        };\n      }\n\n      let arr = [];\n      response.data.Doctors.map(item => {\n        let obj = {};\n        obj.value = item.id;\n        obj.label = item.name;\n        arr.push(obj);\n      });\n      this.setState({\n        doctors: arr\n      });\n      this.setState({\n        codePercentageData: dataPie,\n        providerGraphData: dataProvider,\n        physcianGraphData: dataPhysician,\n        DMETPGraphData: dataDMETP,\n        DMETP_TBGraphData: dataDMETP_TB\n      });\n    }).catch(error => {}).finally(() => {});\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }, \"Doctors\"), /*#__PURE__*/React.createElement(Select, {\n      onChange: this.getDoctorDetail.bind(this),\n      options: this.state.doctors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, this.state.doctorDetail.length > 0 && this.state.doctorDetail.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(StatsCard, {\n        bigIcon: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"pe-7s-wallet text-success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 34\n          }\n        }),\n        statsText: \"Total Amount\",\n        statsValue: item.amount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(StatsCard, {\n        bigIcon: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"pe-7s-graph1 text-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 33\n          }\n        }),\n        statsText: \"Total Cases\",\n        statsValue: item.case_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 22\n        }\n      })));\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      statsIcon: \"fa fa-history\",\n      id: \"chartHours\",\n      title: \"Physician Graph\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ct-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 19\n        }\n      }, this.state.physcianGraphData.labels && this.state.physcianGraphData.labels.length > 0 && /*#__PURE__*/React.createElement(ChartistGraph, {\n        data: this.state.physcianGraphData,\n        type: \"Line\",\n        options: this.optionsSalesPhysician,\n        responsiveOptions: responsiveSales,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      statsIcon: \"fa fa-history\",\n      id: \"chartHours\",\n      title: \"Provider Graph\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ct-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 19\n        }\n      }, this.state.providerGraphData.labels && this.state.providerGraphData.labels.length > 0 && /*#__PURE__*/React.createElement(ChartistGraph, {\n        data: this.state.providerGraphData,\n        type: \"Line\",\n        options: this.optionsSalesProvider,\n        responsiveOptions: responsiveSales,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      statsIcon: \"fa fa-history\",\n      id: \"chartHours\",\n      title: \"DMETP Graph\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ct-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 19\n        }\n      }, this.state.DMETPGraphData.labels && this.state.DMETPGraphData.labels.length > 0 && /*#__PURE__*/React.createElement(ChartistGraph, {\n        data: this.state.DMETPGraphData,\n        type: \"Line\",\n        options: this.optionsSalesDMETP,\n        responsiveOptions: responsiveSales,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 23\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      statsIcon: \"fa fa-history\",\n      id: \"chartHours\",\n      title: \"DMETP TB Graph\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ct-chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 19\n        }\n      }, this.state.DMETP_TBGraphData.labels && this.state.DMETP_TBGraphData.labels.length > 0 && /*#__PURE__*/React.createElement(ChartistGraph, {\n        data: this.state.DMETP_TBGraphData,\n        type: \"Line\",\n        options: this.optionsSalesDMETP_TB,\n        responsiveOptions: responsiveSales,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 109\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      statsIcon: \"fa fa-clock-o\",\n      title: \"Codes Percentages\",\n      category: \"Last Campaign Performance\",\n      stats: \"Campaign sent 2 days ago\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        id: \"chartPreferences\",\n        className: \"ct-chart ct-perfect-fourth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ChartistGraph, {\n        data: this.state.codePercentageData,\n        type: \"Pie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }\n      })),\n      legend: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 19\n        }\n      }, this.createLegend(this.legendPie)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/mac/Desktop/Work/TemplateJob/scrapper/frontend/src/views/Dashboard.jsx"],"names":["React","Component","ChartistGraph","axios","Grid","Row","Col","history","url","Card","StatsCard","Tasks","Select","dataPie","legendPie","dataSales","optionsSales","responsiveSales","legendSales","dataBar","optionsBar","responsiveBar","legendBar","Dashboard","names","types","state","codePercentageData","providerGraphData","physcianGraphData","DMETP_TBGraphData","DMETPGraphData","doctors","doctorDetail","optionsSalesPhysician","low","high","showArea","height","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","right","optionsSalesDMETP_TB","optionsSalesProvider","optionsSalesDMETP","getDoctorDetail","event","get","getDoctorDetailUrl","params","id","value","then","response","setState","data","catch","error","finally","componentDidMount","getGraphData","createLegend","json","legend","i","length","type","push","getGraphDataUrl","labels","series","cp","map","obj","code","percentage","physicianValue","PhysicianGraph","Number","dataPhysician","providerValue","ProviderGraph","dataProvider","DMETPValue","DMETP","dataDMETP","DMETP_TBValue","DMETP_TB","dataDMETP_TB","arr","Doctors","item","label","name","render","bind","amount","case_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport axios from 'axios';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport history from '../utils/history';\nimport * as url from '../utils/constant';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport Select from 'react-select';\nimport '../assets/css/custom.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './dashboard.scss';\n\nimport {\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar\n} from \"variables/Variables.jsx\";\n\nclass Dashboard extends Component {\n  legendPie = {\n    names: [\"L0650\", \"L3960\", \"L3809\",\"L1851\",\"L2397\",\"L1833\",\"L1906\",\"L3916\",\"L1971\"],\n    types: [\"L0650\", \"L3960\", \"L3809\",\"L1851\",\"L2397\",\"L1833\",\"L1906\",\"L3916\",\"L1971\"]\n  };\n  state = {\n    codePercentageData: [],\n    providerGraphData: {},\n    physcianGraphData:{},\n    DMETP_TBGraphData: {},\n    DMETPGraphData:{}, \n    doctors:[],\n    doctorDetail:{}\n  }\n\n   optionsSalesPhysician = {\n    low: 0,\n    high: 800,\n    showArea: false,\n    height: \"245px\",\n    axisX: {\n      showGrid: false\n    },\n   \n    lineSmooth: true,\n    showLine: true,\n    showPoint: true,\n    fullWidth: true,\n    chartPadding: {\n      right: 50\n    }\n  };\n\n  optionsSalesDMETP_TB = {\n    low: 0,\n    high: 800,\n    showArea: false,\n    height: \"245px\",\n    axisX: {\n      showGrid: false\n    },\n   \n    lineSmooth: true,\n    showLine: true,\n    showPoint: true,\n    fullWidth: true,\n    chartPadding: {\n      right: 50\n    }\n  };\n\n  optionsSalesProvider = {\n    low: 0,\n    high: 800,\n    showArea: false,\n    height: \"245px\",\n    axisX: {\n      showGrid: false\n    },\n   \n    lineSmooth: true,\n    showLine: true,\n    showPoint: true,\n    fullWidth: true,\n    chartPadding: {\n      right: 50\n    }\n  };\n\n  optionsSalesDMETP = {\n    low: 0,\n    high: 800,\n    showArea: false,\n    height: \"245px\",\n    axisX: {\n      showGrid: false\n    },\n   \n    lineSmooth: true,\n    showLine: true,\n    showPoint: true,\n    fullWidth: true,\n    chartPadding: {\n      right: 50\n    }\n  };\n\n\n  componentDidMount(){\n    this.getGraphData();\n  }\n\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n\n  getGraphData(){\n    axios.get(url.getGraphDataUrl,\n      )\n      .then((response) => {\n        let labels = [];\n        let series = [];\n        response.data.cp.map((obj,i)=>{\n          labels[i] = obj.code;\n          series[i] = obj.percentage;\n        });\n        let dataPie = {\n          labels: labels,\n          series: series\n        };\n\n        labels = [];\n        series = [];\n        let physicianValue = 0;\n        response.data.PhysicianGraph.map((obj,i)=>{\n          labels[i] = obj.code;\n          series[i] = obj.percentage;\n          physicianValue +=  Number(obj.percentage);\n        });\n        this.optionsSalesPhysician['high'] = physicianValue;\n        let dataPhysician ;\n        if(response.data.PhysicianGraph.length > 0 ){\n          dataPhysician = {\n            series: [series],\n            labels: labels,\n          };\n        }else{\n          dataPhysician = {\n            series: [['']],\n            labels: [''],\n          };\n        }\n\n\n        labels = [];\n        series = [];\n        let providerValue = 0;\n        response.data.ProviderGraph.map((obj,i)=>{\n          labels[i] = obj.code;\n          series[i] = obj.percentage;\n          providerValue +=  Number(obj.percentage);\n        });\n        this.optionsSalesProvider['high'] = providerValue;\n\n        let dataProvider ;\n        if(response.data.ProviderGraph.length > 0 ){\n          dataProvider = {\n            series: [series],\n            labels: labels,\n          };\n        }else{\n          dataProvider = {\n            series: [['']],\n            labels: [''],\n          };\n        }\n\n        labels = [];\n        series = [];\n        let DMETPValue = 0;\n        response.data.DMETP.map((obj,i)=>{\n          labels[i] = obj.code;\n          series[i] = obj.percentage;\n          DMETPValue += Number(obj.percentage);\n        });\n        this.optionsSalesDMETP['high'] = DMETPValue;\n    \n        let dataDMETP ;\n        if(response.data.DMETP.length > 0 ){\n          dataDMETP = {\n            series: [series],\n            labels: labels,\n          };\n        }else{\n          dataDMETP = {\n            series: [['']],\n            labels: [''],\n          };\n        }\n\n\n        labels = [];\n        series = [];\n        let DMETP_TBValue = 0;\n        response.data.DMETP_TB.map((obj,i)=>{\n          labels[i] = obj.code;\n          series[i] = obj.percentage;\n          DMETP_TBValue += Number(obj.percentage);\n        });\n        this.optionsSalesDMETP_TB['high'] = DMETP_TBValue;\n\n        let dataDMETP_TB ;\n        if(response.data.DMETP_TB.length > 0 ){\n          dataDMETP_TB = {\n            series: [series],\n            labels: labels,\n          };\n        }else{\n          dataDMETP_TB = {\n            series: [['']],\n            labels: [''],\n          };\n        }\n\n        let arr = [];\n        response.data.Doctors.map((item)=>{\n          let obj = {}\n          obj.value = item.id;\n          obj.label = item.name;\n          arr.push(obj);\n        });\n        this.setState({\n          doctors: arr\n        });\n       \n\n        this.setState({\n          codePercentageData:dataPie,\n          providerGraphData:dataProvider,\n          physcianGraphData:dataPhysician,\n          DMETPGraphData:dataDMETP,\n          DMETP_TBGraphData:dataDMETP_TB,\n        });\n      })\n      .catch((error) => {\n      })\n      .finally(() => {\n      });\n  }\n\n  getDoctorDetail = (event) => {\n\n    axios.get(url.getDoctorDetailUrl,{\n        params: {\n          id: event.value,\n        }\n      }\n    ).then((response) => {\n      debugger;\n      this.setState({\n        doctorDetail:response.data,\n      })\n    })\n    .catch((error) => {\n    })\n    .finally(() => {\n    });\n  \n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n       \n      <Grid fluid>\n        <Row>\n          <Col md={3} >\n            <div className=\"mb-3\">\n              <p>Doctors</p>\n              <Select onChange = {this.getDoctorDetail.bind(this)}  options={this.state.doctors} />\n            </div>\n          </Col>\n        </Row>\n        \n        <Row>\n          {this.state.doctorDetail.length>0 && this.state.doctorDetail.map((item)=>{\n                  return(\n                    <div>\n                    <Col lg={3} sm={6}>\n                      <StatsCard\n                        bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                        statsText=\"Total Amount\"\n                        statsValue={item.amount}\n                      />\n                    </Col>\n                     <Col lg={3} sm={6}>\n                     <StatsCard\n                       bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                       statsText=\"Total Cases\"\n                       statsValue={item.case_count}\n                     />\n                   </Col>\n                   </div>\n\n                  )\n              })} \n          </Row>\n          <Row>\n            <Col md={6}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"Physician Graph\"\n                content={\n                  <div className=\"ct-chart\">\n                    {this.state.physcianGraphData.labels && this.state.physcianGraphData.labels.length>0 && \n                        <ChartistGraph\n                        data={this.state.physcianGraphData}\n                        type=\"Line\"\n                        options={this.optionsSalesPhysician}\n                        responsiveOptions={responsiveSales}\n                      />\n                    }\n                  </div>\n                }\n                \n              />\n            </Col>\n            <Col md={6}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"Provider Graph\"\n                content={\n                  <div className=\"ct-chart\">\n                  {this.state.providerGraphData.labels && this.state.providerGraphData.labels.length>0 && \n                    <ChartistGraph\n                      data={this.state.providerGraphData}\n                      type=\"Line\"\n                      options={this.optionsSalesProvider}\n                      responsiveOptions={responsiveSales}\n                    />\n                  }\n                  </div>\n                }\n               \n              />\n            </Col>\n          </Row>\n    \n          <Row>\n            <Col md={6}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"DMETP Graph\"\n                content={\n                  <div className=\"ct-chart\">\n                    {this.state.DMETPGraphData.labels && this.state.DMETPGraphData.labels.length>0 && \n                      <ChartistGraph\n                        data={this.state.DMETPGraphData}\n                        type=\"Line\"\n                        options={this.optionsSalesDMETP}\n                        responsiveOptions={responsiveSales}\n                      />\n                    }\n                  </div>\n                }\n               \n              />\n            </Col>\n            <Col md={6}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"DMETP TB Graph\"\n                content={\n                  <div className=\"ct-chart\">\n                    {this.state.DMETP_TBGraphData.labels && this.state.DMETP_TBGraphData.labels.length>0 && <ChartistGraph\n                      data={this.state.DMETP_TBGraphData}\n                      type=\"Line\"\n                      options={this.optionsSalesDMETP_TB}\n                      responsiveOptions={responsiveSales}\n                    />\n                  }\n                  </div>\n                }\n                \n              />\n            </Col>\n             </Row>\n          \n          <Row>\n               <Col md={12}>\n              <Card\n                statsIcon=\"fa fa-clock-o\"\n                title=\"Codes Percentages\"\n                category=\"Last Campaign Performance\"\n                stats=\"Campaign sent 2 days ago\"\n                content={\n                  <div\n                    id=\"chartPreferences\"\n                    className=\"ct-chart ct-perfect-fourth\"\n                  >\n                    <ChartistGraph data={this.state.codePercentageData} type=\"Pie\" />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(this.legendPie)}</div>\n                }\n              />\n            </Col>\n        \n          </Row>\n          \n         \n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}