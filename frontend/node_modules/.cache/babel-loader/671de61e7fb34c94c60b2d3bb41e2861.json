{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Work/TemplateJob/scrapper/frontend/src/views/Typography.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport history from '../utils/history';\nimport * as url from '../utils/constant';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PdfTemplate from './PdfTemplate/PdfTemplate';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport qs from 'qs';\nimport '../assets/css/custom.scss';\nlet columns = [{\n  \"value\": \"Name\"\n}, {\n  \"value\": \"Address\"\n}, {\n  \"value\": \"Height\"\n}, {\n  \"value\": \"Weight\"\n}, {\n  \"value\": \"Age\"\n}, {\n  \"value\": \"DOB\"\n}, {\n  \"value\": \"SSN\"\n}, {\n  \"value\": \"Gender\"\n}];\nconst Countries = [{\n  label: \"Albania\",\n  value: 355\n}, {\n  label: \"Argentina\",\n  value: 54\n}, {\n  label: \"Austria\",\n  value: 43\n}, {\n  label: \"Cocos Islands\",\n  value: 61\n}, {\n  label: \"Kuwait\",\n  value: 965\n}, {\n  label: \"Sweden\",\n  value: 46\n}, {\n  label: \"Venezuela\",\n  value: 58\n}];\nconst PainLevel = [{\n  label: \"Level 1 (Moderate)\",\n  value: \"Level 1 (Moderate)\"\n}, {\n  label: \"Level 2 (Moderate)\",\n  value: \"Level 2 (Moderate)\"\n}, {\n  label: \"Level 3 (Moderate)\",\n  value: \"Level 3 (Moderate)\"\n}, {\n  label: \"Level 4 (Moderate)\",\n  value: \"Level 4 (Moderate)\"\n}, {\n  label: \"Level 5 (Moderate)\",\n  value: \"Level 5 (Moderate)\"\n}, {\n  label: \"Level 6 (Severe)\",\n  value: \"Level 6 (Severe)\"\n}, {\n  label: \"Level 7 (Severe)\",\n  value: \"Level 7 (Severe)\"\n}, {\n  label: \"Level 8 (Severe)\",\n  value: \"Level 8 (Severe)\"\n}, {\n  label: \"Level 9 (Severe)\",\n  value: \"Level 9 (Severe)\"\n}, {\n  label: \"Level 10 (Severe)\",\n  value: \"Level 10 (Severe)\"\n}]; // chief_complaint = models.TextField()\n// subjective = models.TextField()\n// surgery = models.TextField()\n// objective_assessment = models.TextField()\n// overall_diagnosis = models.TextField()\n// plan_and_treatment_goals = models.TextField()\n// indications_of_need = models.TextField()\n// treatment_goals_for = models.TextField()\n\nclass Typography extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeader: columns,\n      pdfData: [],\n      file: [],\n      diseaseCodes: [],\n      diagnosis: [],\n      orthosisDevicesPrescribed: [],\n      statementMedicalNecessity: [],\n      previouslyTriedTreatments: [],\n      valuesList: [],\n      indication: [],\n      treatment: [],\n      dme: [],\n      dmeVal: '',\n      diseaseCodeVal: '',\n      diagnosisVal: '',\n      orthosisDevicesPrescribedVal: '',\n      statementMedicalNecessityVal: '',\n      previouslyTriedTreatmentsVal: '',\n      indicationVal: '',\n      treatmentVal: '',\n      isSaveButtonClicked: false,\n      showDiseaseOption: false,\n      showExamNotes: false,\n      chiefComplaint: [],\n      PainLevelList: [],\n      subjective: [],\n      surgery: [],\n      objectiveAssessment: [],\n      overallDiagnosis: [],\n      planTreatmentGoals: [],\n      treatmentGoalsFor: [],\n      indicationsNeed: [],\n      chiefComplaintVal: '',\n      subjectiveVal: '',\n      surgeryVal: '',\n      objectiveAssessmentVal: '',\n      overallDiagnosisVal: '',\n      planTreatmentGoalsVal: '',\n      indicationsNeedVal: '',\n      treatmentGoalsForVal: '',\n      painLevelVal: ''\n    };\n\n    this.getDiseaseData = event => {\n      let data = this.state.valuesList;\n      data.push(event.value);\n      this.setState({\n        valuesList: data\n      });\n      this.setState({\n        diseaseCodeVal: event.value,\n        showDiseaseOption: false\n      });\n      axios.get(url.getDiseaseDataUrl, {\n        params: {\n          id: event.value\n        }\n      }).then(response => {\n        let arr = [];\n\n        if (response.data) {\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.diagnosis;\n            obj.label = item.diagnosis;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            diagnosis: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.orthosis_devices_prescribed;\n            obj.label = item.orthosis_devices_prescribed;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            orthosisDevicesPrescribed: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.statement_of_medical_necessity;\n            obj.label = item.statement_of_medical_necessity;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            statementMedicalNecessity: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.previously_tried_treatments;\n            obj.label = item.previously_tried_treatments;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            previouslyTriedTreatments: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.indication;\n            obj.label = item.indication;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            indication: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            if (item.dme) {\n              let obj = {};\n              obj.value = item.dme;\n              obj.label = item.dme;\n              arr.push(obj);\n            }\n          });\n          arr = this.uniq(arr, 'value');\n          debugger;\n          this.setState({\n            dme: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.treatment;\n            obj.label = item.treatment;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            treatment: arr,\n            showDiseaseOption: true\n          });\n        }\n      }).catch(error => {}).finally(() => {// always executed\n      });\n    };\n\n    this.setDiagnosisVal = event => {\n      this.setState({\n        diagnosisVal: event.value\n      });\n    };\n\n    this.setDME = event => {\n      this.setState({\n        dmeVal: event.value\n      });\n    };\n\n    this.setOrthosisDevicesPrescribedVal = event => {\n      this.setState({\n        orthosisDevicesPrescribedVal: event.value\n      });\n    };\n\n    this.setStatementMedicalNecessityVal = event => {\n      this.setState({\n        statementMedicalNecessityVal: event.value\n      });\n    };\n\n    this.setPreviouslyTriedTreatmentsVal = event => {\n      this.setState({\n        previouslyTriedTreatmentsVal: event.value\n      });\n    };\n\n    this.setIndicationVal = event => {\n      this.setState({\n        indicationVal: event.value\n      });\n    };\n\n    this.setTreatmentVal = event => {\n      this.setState({\n        treatmentVal: event.value\n      });\n    };\n\n    this.addToArray = e => {\n      debugger;\n      let obj = {\n        diseaseCodeVal: this.state.diseaseCodeVal,\n        diagnosisVal: this.state.diagnosisVal,\n        orthosisDevicesPrescribedVal: this.state.orthosisDevicesPrescribedVal,\n        statementMedicalNecessityVal: this.state.statementMedicalNecessityVal,\n        previouslyTriedTreatmentsVal: this.state.previouslyTriedTreatmentsVal,\n        indicationVal: this.state.indicationVal,\n        treatmentVal: this.state.treatmentVal,\n        dmeVal: this.state.dmeVal,\n        painLevelVal: this.state.painLevelVal\n      };\n      let arr = [];\n      arr.push(obj);\n      let data = this.state.pdfData;\n      arr = [...arr, ...data];\n      this.setState({\n        pdfData: arr,\n        showDiseaseOption: false,\n        dmeVal: '',\n        diseaseCodeVal: '',\n        diagnosisVal: '',\n        orthosisDevicesPrescribedVal: '',\n        statementMedicalNecessityVal: '',\n        previouslyTriedTreatmentsVal: '',\n        indicationVal: '',\n        treatmentVal: ''\n      }, () => {\n        if (this.state.isSaveButtonClicked) {\n          this.pdfExportComponent.save();\n          this.setState({\n            isSaveButtonClicked: false\n          });\n        }\n      });\n    };\n\n    this.savePdf = e => {\n      this.setState({\n        isSaveButtonClicked: true\n      }, () => {\n        this.addToArray();\n      });\n    };\n\n    this.getExamNotes = event => {\n      this.setState({\n        showExamNotes: false\n      });\n      axios.get(url.getExamNotesUrl).then(response => {\n        let arr = [];\n\n        if (response.data) {\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.chief_complaint;\n            obj.label = item.chief_complaint;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            chiefComplaint: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.subjective;\n            obj.label = item.subjective;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            subjective: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.surgery;\n            obj.label = item.surgery;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            surgery: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.objective_assessment;\n            obj.label = item.objective_assessment;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            objectiveAssessment: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.overall_diagnosis;\n            obj.label = item.overall_diagnosis;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            overallDiagnosis: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.plan_and_treatment_goals;\n            obj.label = item.plan_and_treatment_goals;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            planTreatmentGoals: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.indications_of_need;\n            obj.label = item.indications_of_need;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            indicationsNeed: arr\n          });\n          arr = [];\n          response.data.map(item => {\n            let obj = {};\n            obj.value = item.treatment_goals_for;\n            obj.label = item.treatment_goals_for;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr, 'value');\n          this.setState({\n            treatmentGoalsFor: arr,\n            showExamNotes: true\n          });\n        }\n      }).catch(error => {}).finally(() => {// always executed\n      });\n    };\n\n    this.setChiefComplaintVal = event => {\n      this.setState({\n        chiefComplaintVal: event.value\n      });\n    };\n\n    this.setSubjectiveVal = event => {\n      this.setState({\n        subjectiveVal: event.value\n      });\n    };\n\n    this.setSurgeryVal = event => {\n      this.setState({\n        surgeryVal: event.value\n      });\n    };\n\n    this.setObjectiveAssessmentVal = event => {\n      this.setState({\n        objectiveAssessmentVal: event.value\n      });\n    };\n\n    this.setOverallDiagnosisVal = event => {\n      this.setState({\n        overallDiagnosisVal: event.value\n      });\n    };\n\n    this.setPlanTreatmentGoalsVal = event => {\n      this.setState({\n        planTreatmentGoalsVal: event.value\n      });\n    };\n\n    this.setIndicationsNeedVal = event => {\n      this.setState({\n        indicationsNeedVal: event.value\n      });\n    };\n\n    this.setTreatmentGoalsForVal = event => {\n      this.setState({\n        treatmentGoalsForVal: event.value\n      });\n    };\n\n    this.setPainLevelVal = event => {\n      this.setState({\n        painLevelVal: event.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getDiseaseCode();\n    this.setState({\n      PainLevelList: PainLevel\n    });\n  }\n\n  getDiseaseCode() {\n    axios.get(url.getDiseaseCodeUrl).then(response => {\n      let arr = [];\n\n      if (response.data) {\n        response.data.map(item => {\n          let obj = {};\n          obj.value = item.disease_code;\n          obj.label = item.disease_code;\n          arr.push(obj);\n        });\n        arr = this.uniq(arr, 'value');\n        this.setState({\n          diseaseCodes: arr\n        });\n      }\n    }).catch(error => {}).finally(() => {// always executed\n    });\n  }\n\n  uniq(a, param) {\n    return a.filter((item, pos, array) => {\n      return array.map(mapItem => {\n        return mapItem[param];\n      }).indexOf(item[param]) === pos;\n    });\n  }\n\n  // getExamNotes = (e) =>{\n  //   this.setState({showExamNotes:true});\n  //   axios.get(url.getExamNotesUrl,{\n  //     params: {\n  //       list: this.state.valuesList.toLocaleString(),\n  //     },\n  //   }\n  //   )\n  //   .then((response) => {\n  //   })\n  //   .catch((error) => {\n  //   })\n  //   .finally(() => {\n  //       // always executed\n  //   });\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table-list\",\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Disease\",\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        class: \"disease-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 17\n        }\n      }, this.state.diseaseCodes && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }\n      }, \"Disease Code\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.getDiseaseData.bind(this),\n        options: this.state.diseaseCodes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 25\n        }\n      }, \"DME\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setDME.bind(this),\n        options: this.state.dme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 25\n        }\n      }))), this.state.showDiseaseOption && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 23\n        }\n      }, this.state.diagnosis && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3 mt-3 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 29\n        }\n      }, \"Diagnosis\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setDiagnosisVal.bind(this),\n        options: this.state.diagnosis,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 29\n        }\n      })), this.state.orthosisDevicesPrescribed && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 29\n        }\n      }, \"Orthosis Devices Prescribed\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setOrthosisDevicesPrescribedVal.bind(this),\n        options: this.state.orthosisDevicesPrescribed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 29\n        }\n      })), this.state.statementMedicalNecessity && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 29\n        }\n      }, \"Statement Medical Necessity\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setStatementMedicalNecessityVal.bind(this),\n        options: this.state.statementMedicalNecessity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 23\n        }\n      }, this.state.previouslyTriedTreatments && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 63\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 27\n        }\n      }, \"Previously Tried Treatments\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setPreviouslyTriedTreatmentsVal.bind(this),\n        options: this.state.previouslyTriedTreatments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 27\n        }\n      })), this.state.PainLevelList && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 27\n        }\n      }, \"Pain Level Described by Patient\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setPainLevelVal.bind(this),\n        options: this.state.PainLevelList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 27\n        }\n      })), this.state.indication && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 27\n        }\n      }, \"Indication\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setIndicationVal.bind(this),\n        options: this.state.indication,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 27\n        }\n      })), this.state.treatment && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 47\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 27\n        }\n      }, \"New Treatment\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setTreatmentVal.bind(this),\n        options: this.state.treatment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 27\n        }\n      })))), this.state.showExamNotes && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"title\",\n        style: {\n          padding: '15px 15px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 23\n        }\n      }, \"Exam Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 23\n        }\n      }, this.state.chiefComplaint && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3 mt-3 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 29\n        }\n      }, \"Chief Complaint\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setChiefComplaintVal.bind(this),\n        options: this.state.chiefComplaint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 29\n        }\n      })), this.state.subjective && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 50\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 29\n        }\n      }, \"Subjective\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setSubjectiveVal.bind(this),\n        options: this.state.subjective,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 29\n        }\n      })), this.state.surgery && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 47\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 29\n        }\n      }, \"Surgery\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setSurgeryVal.bind(this),\n        options: this.state.surgery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 23\n        }\n      }, this.state.objectiveAssessment && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 27\n        }\n      }, \"Objective Assessment\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setObjectiveAssessmentVal.bind(this),\n        options: this.state.objectiveAssessment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 27\n        }\n      })), this.state.overallDiagnosis && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 27\n        }\n      }, \"Overall Diagnosis\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setOverallDiagnosisVal.bind(this),\n        options: this.state.overallDiagnosis,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 27\n        }\n      })), this.state.planTreatmentGoals && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 56\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 27\n        }\n      }, \"Plan Treatment and Goals\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setPlanTreatmentGoalsVal.bind(this),\n        options: this.state.planTreatmentGoals,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 27\n        }\n      })), this.state.indicationsNeed && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 27\n        }\n      }, \"Indications Need\"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setIndicationsNeedVal.bind(this),\n        options: this.state.indicationsNeed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 27\n        }\n      })), this.state.treatmentGoalsFor && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 55\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 27\n        }\n      }, \" Treatment Goals For  \"), /*#__PURE__*/React.createElement(Select, {\n        onChange: this.setTreatmentGoalsForVal.bind(this),\n        options: this.state.treatmentGoalsFor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 27\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.addToArray.bind(this),\n        className: \"ml-3 btn btnSubmit share\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 21\n        }\n      }, \"Add More\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.getExamNotes.bind(this),\n        className: \"ml-3 btn btnSubmit share\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }\n      }, \"Add Exam Notes\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          marginLeft: \"15px\"\n        },\n        onClick: this.savePdf.bind(this),\n        className: \"btn btnSubmit share\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }\n      }, \"Generate PDF\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          left: \"-1000px\",\n          top: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PDFExport, {\n        paperSize: \"A4\",\n        margin: \"1cm\",\n        fileName: this.state.diseaseCodeVal,\n        ref: component => this.pdfExportComponent = component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(PdfTemplate, {\n        examNotes: this.state,\n        pdfData: this.state.pdfData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 29\n        }\n      })))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nexport default Typography;","map":{"version":3,"sources":["/Users/mac/Desktop/Work/TemplateJob/scrapper/frontend/src/views/Typography.jsx"],"names":["React","Component","Grid","Row","Col","Table","history","url","axios","Card","thArray","tdArray","Select","PdfTemplate","PDFExport","qs","columns","Countries","label","value","PainLevel","Typography","state","tableHeader","pdfData","file","diseaseCodes","diagnosis","orthosisDevicesPrescribed","statementMedicalNecessity","previouslyTriedTreatments","valuesList","indication","treatment","dme","dmeVal","diseaseCodeVal","diagnosisVal","orthosisDevicesPrescribedVal","statementMedicalNecessityVal","previouslyTriedTreatmentsVal","indicationVal","treatmentVal","isSaveButtonClicked","showDiseaseOption","showExamNotes","chiefComplaint","PainLevelList","subjective","surgery","objectiveAssessment","overallDiagnosis","planTreatmentGoals","treatmentGoalsFor","indicationsNeed","chiefComplaintVal","subjectiveVal","surgeryVal","objectiveAssessmentVal","overallDiagnosisVal","planTreatmentGoalsVal","indicationsNeedVal","treatmentGoalsForVal","painLevelVal","getDiseaseData","event","data","push","setState","get","getDiseaseDataUrl","params","id","then","response","arr","map","item","obj","uniq","orthosis_devices_prescribed","statement_of_medical_necessity","previously_tried_treatments","catch","error","finally","setDiagnosisVal","setDME","setOrthosisDevicesPrescribedVal","setStatementMedicalNecessityVal","setPreviouslyTriedTreatmentsVal","setIndicationVal","setTreatmentVal","addToArray","e","pdfExportComponent","save","savePdf","getExamNotes","getExamNotesUrl","chief_complaint","objective_assessment","overall_diagnosis","plan_and_treatment_goals","indications_of_need","treatment_goals_for","setChiefComplaintVal","setSubjectiveVal","setSurgeryVal","setObjectiveAssessmentVal","setOverallDiagnosisVal","setPlanTreatmentGoalsVal","setIndicationsNeedVal","setTreatmentGoalsForVal","setPainLevelVal","componentDidMount","getDiseaseCode","getDiseaseCodeUrl","disease_code","a","param","filter","pos","array","mapItem","indexOf","render","bind","padding","marginLeft","position","left","top","component","width"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport history from '../utils/history';\nimport * as url from '../utils/constant';\nimport axios from 'axios';\nimport Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PdfTemplate from './PdfTemplate/PdfTemplate';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport  qs from 'qs';\n\nimport '../assets/css/custom.scss';\n\nlet columns = [\n  {\"value\":\"Name\"},\n  {\"value\":\"Address\"},\n  {\"value\":\"Height\"},\n  {\"value\":\"Weight\"},\n  {\"value\":\"Age\"},\n  {\"value\":\"DOB\"},\n  {\"value\":\"SSN\"},\n  {\"value\":\"Gender\"},\n]\n\nconst Countries = [\n  { label: \"Albania\", value: 355 },\n  { label: \"Argentina\", value: 54 },\n  { label: \"Austria\", value: 43 },\n  { label: \"Cocos Islands\", value: 61 },\n  { label: \"Kuwait\", value: 965 },\n  { label: \"Sweden\", value: 46 },\n  { label: \"Venezuela\", value: 58 }\n];\n\nconst PainLevel = [\n  { label: \"Level 1 (Moderate)\", value: \"Level 1 (Moderate)\" },\n  { label: \"Level 2 (Moderate)\", value: \"Level 2 (Moderate)\" },\n  { label: \"Level 3 (Moderate)\", value: \"Level 3 (Moderate)\" },\n  { label: \"Level 4 (Moderate)\", value: \"Level 4 (Moderate)\" },\n  { label: \"Level 5 (Moderate)\", value: \"Level 5 (Moderate)\" },\n  { label: \"Level 6 (Severe)\",  value: \"Level 6 (Severe)\" },\n  { label: \"Level 7 (Severe)\",  value: \"Level 7 (Severe)\" },\n  { label: \"Level 8 (Severe)\",  value: \"Level 8 (Severe)\" },\n  { label: \"Level 9 (Severe)\",  value: \"Level 9 (Severe)\" },\n  { label: \"Level 10 (Severe)\", value: \"Level 10 (Severe)\" },\n];\n\n// chief_complaint = models.TextField()\n// subjective = models.TextField()\n// surgery = models.TextField()\n// objective_assessment = models.TextField()\n// overall_diagnosis = models.TextField()\n// plan_and_treatment_goals = models.TextField()\n// indications_of_need = models.TextField()\n// treatment_goals_for = models.TextField()\nclass Typography extends Component {\n \n\n  state = {\n    tableHeader:columns,\n    pdfData:[],\n    file:[],\n    diseaseCodes:[],\n    diagnosis:[],\n    orthosisDevicesPrescribed:[],\n    statementMedicalNecessity:[],\n    previouslyTriedTreatments:[],\n    valuesList:[],\n    indication:[],\n    treatment:[],\n    dme:[],\n    dmeVal:'',\n    diseaseCodeVal:'',\n    diagnosisVal:'',\n    orthosisDevicesPrescribedVal:'',\n    statementMedicalNecessityVal:'',\n    previouslyTriedTreatmentsVal:'',\n    indicationVal:'',\n    treatmentVal:'',\n    isSaveButtonClicked: false,\n    showDiseaseOption:false,\n    showExamNotes:false,\n   \n    chiefComplaint:[],\n    PainLevelList:[],\n    subjective:[],\n    surgery:[],\n    objectiveAssessment:[],\n    overallDiagnosis:[],\n    planTreatmentGoals:[],\n    treatmentGoalsFor:[],\n    indicationsNeed:[],\n\n    chiefComplaintVal:'',\n    subjectiveVal:'',\n    surgeryVal:'',\n    objectiveAssessmentVal:'',\n    overallDiagnosisVal:'',\n    planTreatmentGoalsVal:'',\n    indicationsNeedVal:'',\n    treatmentGoalsForVal:'',\n    painLevelVal:''\n  }\n\n  componentDidMount(){\n      this.getDiseaseCode();\n      this.setState({PainLevelList:PainLevel})\n  }\n\n  getDiseaseCode(){\n    axios.get(url.getDiseaseCodeUrl,\n         \n      )\n      .then((response) => {\n        let arr = [];\n        if(response.data){\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.disease_code;\n            obj.label = item.disease_code;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          \n          this.setState({\n            diseaseCodes: arr\n          });\n        }\n         \n      })\n      .catch((error) => {\n        \n      })\n      .finally(() => {\n          // always executed\n      });\n  }\n\n  getDiseaseData = (event) => {\n      let data = this.state.valuesList;\n      data.push(event.value);\n      this.setState({\n        valuesList:data,\n      });\n      this.setState({\n        diseaseCodeVal:event.value,\n        showDiseaseOption:false,\n      });\n\n      axios.get(url.getDiseaseDataUrl,{\n          params: {\n            id: event.value,\n          }\n        }\n      )\n      .then((response) => {\n        let arr = [];\n       \n        if(response.data){\n            response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.diagnosis;\n              obj.label = item.diagnosis;\n              arr.push(obj);\n            });\n            arr = this.uniq(arr,'value')\n            this.setState({\n              diagnosis: arr\n            });\n\n\n            arr = [];\n            response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.orthosis_devices_prescribed;\n              obj.label = item.orthosis_devices_prescribed;\n              arr.push(obj);\n            });\n            arr = this.uniq(arr,'value')\n            this.setState({\n              orthosisDevicesPrescribed: arr\n            });\n\n            \n            arr = [];\n            response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.statement_of_medical_necessity;\n              obj.label = item.statement_of_medical_necessity;\n              arr.push(obj);\n            });\n            arr = this.uniq(arr,'value')\n            this.setState({\n              statementMedicalNecessity: arr\n            });\n\n            arr = [];\n            response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.previously_tried_treatments;\n              obj.label = item.previously_tried_treatments;\n              arr.push(obj);\n            });\n            arr = this.uniq(arr,'value')\n            this.setState({\n              previouslyTriedTreatments: arr\n            });\n\n            arr = [];\n            response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.indication;\n              obj.label = item.indication;\n              arr.push(obj);\n            });\n            arr = this.uniq(arr,'value')\n            this.setState({\n              indication: arr\n            });\n\n            arr = [];\n            response.data.map((item)=>{\n              if(item.dme){\n                let obj = {}\n                obj.value = item.dme;\n                obj.label = item.dme;\n                arr.push(obj);\n              }\n            });\n            arr = this.uniq(arr,'value');\n            debugger;\n            this.setState({\n              dme: arr\n            });\n\n            arr = [];\n            response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.treatment;\n              obj.label = item.treatment;\n              arr.push(obj);\n            });\n            arr = this.uniq(arr,'value')\n            this.setState({\n              treatment: arr,\n              showDiseaseOption:true,\n            });\n        }\n         \n      })\n      .catch((error) => {\n        \n      })\n      .finally(() => {\n          // always executed\n      });\n  }\n\n  setDiagnosisVal = (event) => {\n    this.setState({\n      diagnosisVal:event.value,\n    });\n  }\n\n  setDME = (event) => {\n    this.setState({\n      dmeVal:event.value,\n    });\n  }\n\n  setOrthosisDevicesPrescribedVal = (event) => {\n    this.setState({\n      orthosisDevicesPrescribedVal:event.value,\n    });\n  }\n\n  setStatementMedicalNecessityVal = (event) => {\n    this.setState({\n      statementMedicalNecessityVal:event.value,\n    });\n  }\n\n  setPreviouslyTriedTreatmentsVal = (event) => {\n    this.setState({\n      previouslyTriedTreatmentsVal:event.value,\n    });\n  }\n\n  setIndicationVal = (event) => {\n    this.setState({\n      indicationVal:event.value,\n    });\n  }\n\n  setTreatmentVal = (event) => {\n    this.setState({\n      treatmentVal:event.value,\n    });\n  }\n\n  uniq(a, param){\n    return a.filter((item, pos, array)=>{\n      return array.map((mapItem)=>{ return mapItem[param]; }).indexOf(item[param]) === pos;\n    })\n  }\n\n  addToArray = e =>{\n    debugger\n\n    let obj = {\n      diseaseCodeVal: this.state.diseaseCodeVal,             \n      diagnosisVal:this.state.diagnosisVal,                   \n      orthosisDevicesPrescribedVal:this.state.orthosisDevicesPrescribedVal,   \n      statementMedicalNecessityVal:this.state.statementMedicalNecessityVal,   \n      previouslyTriedTreatmentsVal:this.state.previouslyTriedTreatmentsVal,   \n      indicationVal:this.state.indicationVal,                  \n      treatmentVal:this.state.treatmentVal,                   \n      dmeVal:this.state.dmeVal,       \n      \n      painLevelVal:this.state.painLevelVal,             \n    }\n    let arr = [];\n    arr.push(obj)\n\n    let data = this.state.pdfData;\n    arr = [...arr, ...data];\n    this.setState({\n      pdfData:arr,\n      showDiseaseOption:false,\n      dmeVal:'',\n      diseaseCodeVal:'',\n      diagnosisVal:'',\n      orthosisDevicesPrescribedVal:'',\n      statementMedicalNecessityVal:'',\n      previouslyTriedTreatmentsVal:'',\n      indicationVal:'',\n      treatmentVal:'',\n    }\n      ,()=>{\n        if(this.state.isSaveButtonClicked){\n          this.pdfExportComponent.save(); \n          this.setState({\n            isSaveButtonClicked:false,\n          })\n        }\n      });\n  }\n\n  savePdf = (e) => {\n    this.setState({\n      isSaveButtonClicked:true,\n    },()=>{\n      this.addToArray()\n    })\n  }\n\n\n\n  getExamNotes = (event) => {\n    \n    this.setState({\n      showExamNotes:false,\n    });\n\n    axios.get(url.getExamNotesUrl,     \n    )\n    .then((response) => {\n      let arr = [];\n      if(response.data){\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.chief_complaint;\n            obj.label = item.chief_complaint;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            chiefComplaint: arr\n          });\n\n          arr = [];\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.subjective;\n            obj.label = item.subjective;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            subjective: arr\n          });\n\n          \n          arr = [];\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.surgery;\n            obj.label = item.surgery;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            surgery: arr\n          });\n\n          arr = [];\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.objective_assessment;\n            obj.label = item.objective_assessment;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            objectiveAssessment: arr\n          });\n\n          arr = [];\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.overall_diagnosis;\n            obj.label = item.overall_diagnosis;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            overallDiagnosis: arr\n          });\n\n          arr = [];\n          response.data.map((item)=>{\n              let obj = {}\n              obj.value = item.plan_and_treatment_goals;\n              obj.label = item.plan_and_treatment_goals;\n              arr.push(obj);\n          });\n          arr = this.uniq(arr,'value');\n          this.setState({\n            planTreatmentGoals: arr\n          });\n\n          arr = [];\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.indications_of_need;\n            obj.label = item.indications_of_need;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            indicationsNeed: arr,\n          });\n\n          arr = [];\n          response.data.map((item)=>{\n            let obj = {}\n            obj.value = item.treatment_goals_for;\n            obj.label = item.treatment_goals_for;\n            arr.push(obj);\n          });\n          arr = this.uniq(arr,'value')\n          this.setState({\n            treatmentGoalsFor: arr,\n            showExamNotes:true\n          });\n\n      }\n       \n    })\n    .catch((error) => {\n      \n    })\n    .finally(() => {\n        // always executed\n    });\n  }\n\n\n  setChiefComplaintVal = (event) => {\n    this.setState({\n      chiefComplaintVal:event.value,\n    });\n  }\n\n  setSubjectiveVal = (event) => {\n    this.setState({\n      subjectiveVal:event.value,\n    });\n  }\n\n  setSurgeryVal = (event) => {\n    this.setState({\n      surgeryVal:event.value,\n    });\n  }\n\n  setObjectiveAssessmentVal = (event) => {\n    this.setState({\n      objectiveAssessmentVal:event.value,\n    });\n  }\n\n  setOverallDiagnosisVal = (event) => {\n    this.setState({\n      overallDiagnosisVal:event.value,\n    });\n  }\n\n  setPlanTreatmentGoalsVal = (event) => {\n    this.setState({\n      planTreatmentGoalsVal:event.value,\n    });\n  }\n\n  setIndicationsNeedVal = (event) => {\n    this.setState({\n      indicationsNeedVal:event.value,\n    });\n  }\n\n  setTreatmentGoalsForVal = (event) => {\n    this.setState({\n      treatmentGoalsForVal:event.value,\n    });\n  }\n\n  setPainLevelVal= (event) => {\n    this.setState({\n      painLevelVal:event.value,\n    });\n  }\n\n  // getExamNotes = (e) =>{\n  //   this.setState({showExamNotes:true});\n  //   axios.get(url.getExamNotesUrl,{\n  //     params: {\n  //       list: this.state.valuesList.toLocaleString(),\n  //     },\n  //   }\n  //   )\n  //   .then((response) => {\n\n      \n  //   })\n  //   .catch((error) => {\n      \n  //   })\n  //   .finally(() => {\n  //       // always executed\n  //   });\n  // }\n\n  render() {\n    return (\n      <div id=\"table-list\" className=\"content\">\n         <Card\n              title=\"Disease\"\n              category=\"\"\n              ctTableFullWidth\n              ctTableResponsive\n              content = {\n                <div class = \"disease-main\">\n                  {this.state.diseaseCodes &&\n                  <div className = \"col-12\">\n                    <div className = \"col-md-3\">\n                        <p>Disease Code</p>\n                        <Select onChange = {this.getDiseaseData.bind(this)} options={this.state.diseaseCodes} />\n                    </div>\n\n                    <div className = \"col-md-3\">\n                        <p>DME</p>\n                        <Select onChange = {this.setDME.bind(this)} options={this.state.dme} />\n                    </div>\n                      \n                  </div>\n                  }\n\n                  {this.state.showDiseaseOption && \n                    <div>\n                      <div>\n                        {this.state.diagnosis &&<div className = \"col-md-3 col-12 mt-3 mt-3 mt-3\">\n                            <p className = 'mb-0'>Diagnosis</p>\n                            <Select onChange = {this.setDiagnosisVal.bind(this)} options={this.state.diagnosis} />\n                        </div>\n                        }\n\n                        {this.state.orthosisDevicesPrescribed &&<div className = \"col-md-3 col-12 mt-3\">\n                            <p className = 'mb-0'>Orthosis Devices Prescribed</p>\n                            <Select onChange = {this.setOrthosisDevicesPrescribedVal.bind(this)} options={this.state.orthosisDevicesPrescribed} />\n                        </div>\n                        }\n\n                        {this.state.statementMedicalNecessity &&<div className = \"col-md-3 col-12 mt-3\">\n                            <p className = 'mb-0'>Statement Medical Necessity</p>\n                            <Select onChange = {this.setStatementMedicalNecessityVal.bind(this)} options={this.state.statementMedicalNecessity} />\n                        </div>\n                        }\n                      </div>\n\n                      <div>\n                      {this.state.previouslyTriedTreatments &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0'>Previously Tried Treatments</p>\n                          <Select onChange = {this.setPreviouslyTriedTreatmentsVal.bind(this)} options={this.state.previouslyTriedTreatments} />\n                      </div>\n                      }\n\n                      {this.state.PainLevelList && <div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0'>Pain Level Described by Patient</p>\n                          <Select onChange = {this.setPainLevelVal.bind(this)} options={this.state.PainLevelList} />\n                      </div>\n                      }\n\n                      {this.state.indication &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0'>Indication</p>\n                          <Select onChange = {this.setIndicationVal.bind(this)} options={this.state.indication} />\n                      </div>\n                      }\n\n                      {this.state.treatment &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0' >New Treatment</p>\n                          <Select onChange = {this.setTreatmentVal.bind(this)} options={this.state.treatment} />\n                    </div>\n                }\n                  </div>\n                    </div>\n                  } \n\n                  {this.state.showExamNotes && \n                    <div>\n                      <h4 className=\"title\" style={{padding: '15px 15px 0'}}>Exam Notes</h4>\n                      <div>\n                        {this.state.chiefComplaint &&<div className = \"col-md-3 col-12 mt-3 mt-3 mt-3\">\n                            <p className = 'mb-0'>Chief Complaint</p>\n                            <Select onChange = {this.setChiefComplaintVal.bind(this)} options={this.state.chiefComplaint} />\n                        </div>\n                        }\n\n                        {this.state.subjective &&<div className = \"col-md-3 col-12 mt-3\">\n                            <p className = 'mb-0'>Subjective</p>\n                            <Select onChange = {this.setSubjectiveVal.bind(this)} options={this.state.subjective} />\n                        </div>\n                        }\n\n                        {this.state.surgery &&<div className = \"col-md-3 col-12 mt-3\">\n                            <p className = 'mb-0'>Surgery</p>\n                            <Select onChange = {this.setSurgeryVal.bind(this)} options={this.state.surgery} />\n                        </div>\n                        }\n                      </div>\n\n                      <div>\n                      {this.state.objectiveAssessment &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0'>Objective Assessment</p>\n                          <Select onChange = {this.setObjectiveAssessmentVal.bind(this)} options={this.state.objectiveAssessment} />\n                      </div>\n                      }\n\n                      {this.state.overallDiagnosis &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0'>Overall Diagnosis</p>\n                          <Select onChange = {this.setOverallDiagnosisVal.bind(this)} options={this.state.overallDiagnosis} />\n                      </div>\n                      }\n\n                      {this.state.planTreatmentGoals &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0' >Plan Treatment and Goals</p>\n                          <Select onChange = {this.setPlanTreatmentGoalsVal.bind(this)} options={this.state.planTreatmentGoals} />\n                      </div>\n                      }\n\n                    {this.state.indicationsNeed &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0' >Indications Need</p>\n                          <Select onChange = {this.setIndicationsNeedVal.bind(this)} options={this.state.indicationsNeed} />\n                      </div>\n                      }\n\n                      {this.state.treatmentGoalsFor &&<div className = \"col-md-3 col-12 mt-3\">\n                          <p className = 'mb-0' > Treatment Goals For  </p>\n                          <Select onChange = {this.setTreatmentGoalsForVal.bind(this)} options={this.state.treatmentGoalsFor} />\n                      </div>\n                      }\n                    </div>\n                  </div>\n                  } \n\n                  <div className = \"col-12 mt-3\">\n                    <button onClick={this.addToArray.bind(this)}  className=\"ml-3 btn btnSubmit share\" type=\"submit\">\n                      Add More\n                    </button>\n                    <button onClick={this.getExamNotes.bind(this)}  className=\"ml-3 btn btnSubmit share\" type=\"submit\">\n                      Add Exam Notes\n                    </button>\n                    <button style = {{marginLeft:\"15px\"}} onClick={this.savePdf.bind(this)}  className=\"btn btnSubmit share\" type=\"submit\">\n                      Generate PDF\n                    </button>\n                    <div style={{ position: \"absolute\", left: \"-1000px\", top: 0 }}>\n                      <PDFExport\n                          paperSize=\"A4\"\n                          margin=\"1cm\"\n                          fileName={this.state.diseaseCodeVal}\n                          ref={(component) => this.pdfExportComponent = component}\n                      >\n                          <div style={{ width: \"500px\" }}>\n                            <PdfTemplate examNotes = {this.state} pdfData = {this.state.pdfData}/>\n                          </div>\n                      </PDFExport>\n                    </div>\n                  </div>\n                </div>\n              }\n        />\n\n      </div> \n    );\n  }\n}\n\nexport default Typography;\n"]},"metadata":{},"sourceType":"module"}